---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jitsi-meet.name" . }}-jvb
  labels: {{- include "jitsi-meet.labels" . | nindent 4 }}
spec:
  {{- if .Values.jvb.replicas }}
  replicas: {{ .Values.jvb.replicas }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "jitsi-meet.name" . }}-jvb
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "jitsi-meet.name" . }}-jvb
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
        - {{ toYaml . }}
      {{- end }}
    {{- end }}
      containers:
        - name: {{ include "jitsi-meet.name" . }}-jvb
          {{- if .Values.jvb.image }}
          image: {{ .Values.jvb.image }}
          {{- else }}
          image: {{ .Values.imageRepo | default "jitsi" }}/jvb:{{ .Values.imageTag | default "latest"}}
          {{- end }}
          imagePullPolicy: {{ .Values.imagePullPolicy | default "Always" }}
          securityContext:
            capabilities:
              add:
                - SYS_RESOURCE
                - NET_ADMIN
          {{- with .Values.jvb.podSecurityContext }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: "PROSODY_INSTANCE"
              value: {{ include "jitsi-meet.name" . }}-prosody
            - name: "XMPP_SERVER"
              value: {{ include "jitsi-meet.name" . }}-prosody
            - name: "TZ"
              value: {{ .Values.timeZone  | default "UTC" | quote }}
            - name: "ENABLE_XMPP_WEBSOCKET"
              value: {{ (.Values.websockets | default true) | ternary "1" "0" | quote }}
            - name: "JVB_ENABLE_APIS"
              value: "rest,colibri"
            - name: "PUBLIC_URL"
              value: {{ .Values.domain.proto | default "https" }}://{{ .Values.domain.host }}{{- if .Values.domain.port }}:{{ .Values.domain.port }}{{- end }}
            {{- if .Values.publicIP }}
            - name: "DOCKER_HOST_ADDRESS"
              value: {{ .Values.publicIP | quote }}
            {{- end }}
            {{- range $k, $v := .Values.common.environment }}
            - name: {{ $k | quote }}
              value: {{ $v | quote }}
            {{- end }}
            {{- range $k, $v := .Values.jvb.environment }}
            - name: {{ $k | quote }}
              value: {{ $v | quote }}
            {{- end }}

            - name: "JVB_WS_DOMAIN"
              value: {{ .Values.domain.host | quote }}
            # - name: "JVB_WS_SERVER_ID"
            #   value: "jitsi-meet-jvb"
            - name: "JVB_TCP_HARVESTER_DISABLED"
              value: "0"
            - name: "JVB_PORT"
              value: "10000"
            - name: "JVB_TCP_PORT"
              value: "4443"

          ports:
            - name: websocket
              containerPort: 9090
              protocol: TCP
            - name: tcp-stream
              containerPort: 4443
              protocol: TCP
            - name: udp-stream
              containerPort: 10000
              protocol: UDP
          volumeMounts:
            - name: dockersock
              mountPath: "/var/run/docker.sock"
          {{ if .Values.jvb.resources }}
          resources: {{- toYaml .Values.jvb.resources | nindent 12 }}
          {{ end }}
      volumes:
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
